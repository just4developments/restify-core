let restify = require('restify');
let path = require('path');

let utils = require('../utils');
let ShellClassService = require('../service/ShellClass.service');

/************************************
 ** CONTROLLER:   ShellClassController
 ** AUTHOR:       Unknown
 ** CREATED DATE: 11/7/2016, 2:02:46 PM
 *************************************/

server.get('/ShellClass', utils.jsonHandler(), async (req, res, next) => {
    let where = {};
    if (utils.has(req.query.status)) where.status = +req.query.status;
    try {
        const rs = await ShellClassService.find({
            where: where,
            page: +req.query.page,
            recordsPerPage: +req.query.recordsPerPage,
            sort: {
                updatedDate: -1
            }
        });
        res.send(rs);
    }catch(error){
        next(error);
    }
});

server.opts('/ShellClass/upload', (req, res, next) => {
    res.end();
});

server.post('/ShellClass', utils.fileUploadHandler({
    shells: {
        "uploadDir": "assets/shells/",
        "multiples": false,
        "httpPath": "/shells/${filename}"
    }
}), async (req, res, next) => {
    try {
        const resp = await ShellClassService.insertUploadingShell(req.file.shells);
        const rs = await ShellClassService.uploadPlugin(resp);
        res.send({
            class: resp,
            session: rs.SessionId
        });
    } catch (error) {
        utils.deleteFile(utils.getAbsoluteUpload(req.file.shells, path.join(__dirname, '..', '..', 'assets', 'shells', '')));
        next(error);
    }    
});

server.del('/ShellClass/:_id', utils.jsonHandler(), (req, res, next) => {
    try {
        const rs = ShellClassService.deletePlugin(req.params._id);
        res.send(rs.SessionId);    
    } catch (error) {
        next(error);
    }
})